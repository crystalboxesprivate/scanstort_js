<!DOCTYPE html>
<meta charset="utf-8">
<style type="text/css">
   #render {
      width: 1024px;
      display: block;
      margin-left: auto;
      margin-right: auto
   }

   .canvases canvas {
      display: block;
      margin-left: auto;
      margin-right: auto;
      width: 640px;
   }

   .curve-editor {
      border: 1px solid black;
   }
</style>
<div id='render'></div>
<script id="vert" type="x-shader/x-vertex">
   precision mediump float;
   attribute vec3 pos;
   uniform vec2 resolution;
   varying vec2 uv;
   void main() {
     gl_Position = vec4((pos * 2.0 - vec3(1, 1, 0)), 1.0); 
     uv = vec2(pos.x, 1.0 - pos.y);
   }
  </script>
<script id="frag" type="x-shader/x-fragment">
      precision mediump float;
      varying vec2 uv;

      uniform float sh_weight;
      uniform float sh_amp;
      uniform float sh_freq;
      uniform float sh_weightCurveSlot;
      uniform float sh_freqCurveSlot;

      uniform float sv_weight;
      uniform float sv_amp;
      uniform float sv_freq;
      uniform float sv_weightCurveSlot;
      uniform float sv_freqCurveSlot;

      uniform float dh_weight;
      uniform float dh_weightCurveSlot;

      uniform float dv_weight;
      uniform float dv_weightCurveSlot;

      uniform float n_weight;
      uniform float n_weightCurveSlot;


      uniform sampler2D texture;
      uniform sampler2D curves;

      uniform vec2 resolution;
      uniform vec2 curveRes;

      float sampleCurve(float slot, float u) {
         u = u < 0.0 ? 0.0 : u > 1.0 ? 1.0 : u;

         float width = curveRes.x;
         float slots = curveRes.y;

         vec2 uv = vec2(u, slot / slots);

         return texture2D(curves, uv).x ;
      }

      vec2 getOffset(float time) {
         return vec2(cos(time* 0.05) * 0.014, sin(time * 0.25) * 0.05);
      }
   
      void main(void) {
         float time = uv.y * resolution.y;
         // gl_FragColor = texture2D(texture, uv + getOffset(time)); 
         //gl_FragColor = vec4(sampleCurve(1.0, uv.x), 0, 0, 1);
         gl_FragColor = vec4(texture2D(curves, uv).x , 0, 0, 1);
      }
   </script>

<script src="./node_modules/react/umd/react.development.js"></script>
<script src="./node_modules/react-dom/umd/react-dom.development.js"></script>
<script src="./dist/main.js"></script>